import { PrismaService } from '../database/prisma.service';
export declare class EnrollmentService {
    private readonly prisma;
    private readonly logger;
    constructor(prisma: PrismaService);
    enrollStudent(courseId: string, studentId: string, supervisorId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        total: number;
        studentId: string;
        enrollmentDate: Date;
        status: import(".prisma/client").$Enums.EnrollmentStatus;
        courseId: string;
        finalGrade: string | null;
        finalPoints: number | null;
        completed: number;
        currentGrade: number | null;
        attendance: number | null;
        enrolledById: string;
    }>;
    getEnrollmentsByCourse(courseId: string): Promise<({
        student: {
            profile: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                department: string | null;
                grade: string | null;
                userId: string;
                firstName: string;
                lastName: string;
                studentId: string | null;
                major: string | null;
                minor: string | null;
                enrollmentDate: Date | null;
                advisoryTeacherId: string | null;
                position: string | null;
                employeeId: string | null;
                hireDate: Date | null;
                specialization: string[];
                officeLocation: string | null;
                officeHours: string | null;
                dateOfBirth: Date | null;
                phone: string | null;
                street: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string | null;
                gpa: number | null;
                graduationDate: Date | null;
                emergencyContactName: string | null;
                emergencyContactRelationship: string | null;
                emergencyContactPhone: string | null;
                emergencyContactEmail: string | null;
                theme: import(".prisma/client").$Enums.ThemeMode;
                language: string;
                timezone: string;
                emailNotifications: boolean;
                pushNotifications: boolean;
                smsNotifications: boolean;
                profileVisibility: import(".prisma/client").$Enums.Visibility;
                showEmail: boolean;
                showPhone: boolean;
            };
        } & {
            id: string;
            email: string;
            passwordHash: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            avatar: string | null;
            isSupervisor: boolean;
            createdAt: Date;
            updatedAt: Date;
            teacherRegisteredById: string | null;
            studentRegisteredById: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        total: number;
        studentId: string;
        enrollmentDate: Date;
        status: import(".prisma/client").$Enums.EnrollmentStatus;
        courseId: string;
        finalGrade: string | null;
        finalPoints: number | null;
        completed: number;
        currentGrade: number | null;
        attendance: number | null;
        enrolledById: string;
    })[]>;
    getEnrollmentsByStudent(studentId: string): Promise<({
        course: {
            department: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                name: string;
                description: string | null;
                code: string;
                departmentHeadId: string | null;
            };
            instructor: {
                profile: {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    department: string | null;
                    grade: string | null;
                    userId: string;
                    firstName: string;
                    lastName: string;
                    studentId: string | null;
                    major: string | null;
                    minor: string | null;
                    enrollmentDate: Date | null;
                    advisoryTeacherId: string | null;
                    position: string | null;
                    employeeId: string | null;
                    hireDate: Date | null;
                    specialization: string[];
                    officeLocation: string | null;
                    officeHours: string | null;
                    dateOfBirth: Date | null;
                    phone: string | null;
                    street: string | null;
                    city: string | null;
                    state: string | null;
                    zipCode: string | null;
                    country: string | null;
                    gpa: number | null;
                    graduationDate: Date | null;
                    emergencyContactName: string | null;
                    emergencyContactRelationship: string | null;
                    emergencyContactPhone: string | null;
                    emergencyContactEmail: string | null;
                    theme: import(".prisma/client").$Enums.ThemeMode;
                    language: string;
                    timezone: string;
                    emailNotifications: boolean;
                    pushNotifications: boolean;
                    smsNotifications: boolean;
                    profileVisibility: import(".prisma/client").$Enums.Visibility;
                    showEmail: boolean;
                    showPhone: boolean;
                };
            } & {
                id: string;
                email: string;
                passwordHash: string;
                role: import(".prisma/client").$Enums.UserRole;
                isActive: boolean;
                avatar: string | null;
                isSupervisor: boolean;
                createdAt: Date;
                updatedAt: Date;
                teacherRegisteredById: string | null;
                studentRegisteredById: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            level: import(".prisma/client").$Enums.CourseLevel;
            description: string;
            code: string;
            credits: number;
            scheduleDays: string[];
            startTime: string;
            endTime: string;
            location: string;
            building: string | null;
            room: string | null;
            instructorId: string;
            semester: string;
            year: number;
            capacity: number;
            category: string;
            departmentId: string;
            startDate: Date;
            endDate: Date;
            enrollmentDeadline: Date | null;
            studyPlan: import("@prisma/client/runtime/library").JsonValue | null;
            createdById: string;
            enrolled: number;
            status: import(".prisma/client").$Enums.CourseStatus;
            syllabusUrl: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        total: number;
        studentId: string;
        enrollmentDate: Date;
        status: import(".prisma/client").$Enums.EnrollmentStatus;
        courseId: string;
        finalGrade: string | null;
        finalPoints: number | null;
        completed: number;
        currentGrade: number | null;
        attendance: number | null;
        enrolledById: string;
    })[]>;
    bulkEnrollStudents(courseId: string, studentIds: string[], supervisorId: string): Promise<{
        success: boolean;
        enrolled: ({
            student: {
                profile: {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    department: string | null;
                    grade: string | null;
                    userId: string;
                    firstName: string;
                    lastName: string;
                    studentId: string | null;
                    major: string | null;
                    minor: string | null;
                    enrollmentDate: Date | null;
                    advisoryTeacherId: string | null;
                    position: string | null;
                    employeeId: string | null;
                    hireDate: Date | null;
                    specialization: string[];
                    officeLocation: string | null;
                    officeHours: string | null;
                    dateOfBirth: Date | null;
                    phone: string | null;
                    street: string | null;
                    city: string | null;
                    state: string | null;
                    zipCode: string | null;
                    country: string | null;
                    gpa: number | null;
                    graduationDate: Date | null;
                    emergencyContactName: string | null;
                    emergencyContactRelationship: string | null;
                    emergencyContactPhone: string | null;
                    emergencyContactEmail: string | null;
                    theme: import(".prisma/client").$Enums.ThemeMode;
                    language: string;
                    timezone: string;
                    emailNotifications: boolean;
                    pushNotifications: boolean;
                    smsNotifications: boolean;
                    profileVisibility: import(".prisma/client").$Enums.Visibility;
                    showEmail: boolean;
                    showPhone: boolean;
                };
            } & {
                id: string;
                email: string;
                passwordHash: string;
                role: import(".prisma/client").$Enums.UserRole;
                isActive: boolean;
                avatar: string | null;
                isSupervisor: boolean;
                createdAt: Date;
                updatedAt: Date;
                teacherRegisteredById: string | null;
                studentRegisteredById: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            total: number;
            studentId: string;
            enrollmentDate: Date;
            status: import(".prisma/client").$Enums.EnrollmentStatus;
            courseId: string;
            finalGrade: string | null;
            finalPoints: number | null;
            completed: number;
            currentGrade: number | null;
            attendance: number | null;
            enrolledById: string;
        })[];
        skipped: string[];
        message: string;
    }>;
}
